def create_spend_chart(categories):
    bar_chart = ""
    bar_chart += "Percentage spent by category\n"
    spendings = []
    balance = 0
    barChart = []
    # calculating balance
    for c in categories:
        balance += c.get_balance()

    # Calculating spendings
    for c in categories:
        spending = 0
        for l in c.ledger:
            if str(l['amount'])[0] == '-':
                spending += round(float(l["amount"]))
        spendings.append({c.categoryName:spending})

    # Rounding down spendings to nearest 10
    for s in spendings:
        for i in s:
            x = s[i]
            x = -x
            x = (x/balance) * 100
            x = math.floor(x / 10) * 10
            s[i] = x

    # bar_chart = balance
    for i in range(100, -1, -10):
        x = []
        if len(str(i)) < 3:
            bar_chart += (3 - len(str(i))) * " " + str(i) + "|"
        else:
            bar_chart += str(i) + "|"

        for n,s in enumerate(spendings):
            for k in s:
                perc = int(s[k])
                # print(perc, i, perc <= i)

                if perc < i:
                    if n == (len(spendings) - 1):
                        bar_chart += "   "  + "\n"
                    else:
                        bar_chart += "   "
                else:
                    if n == (len(spendings) - 1):
                        bar_chart += " o " + "\n"
                    else:
                        bar_chart += " o "
                # perc -= 10

    bar_chart += "    " + ((len(categories) * 3) + 1) * "-" + '\n'

    # Labeling
    labelMax = 0
    for c in categories:
        if len(c.categoryName) > labelMax:
            labelMax = len(c.categoryName)
    label = ["" for i in range(labelMax)]
    max_space = 0
    first_len = len(label[1]) - label[1].count(" ")
    for k,c in enumerate(categories):
        for i, ch in enumerate(c.categoryName):
            if k == 0:
                label[i]+=("     " + ch)
            else:
                if len(label[i]) - label[i].count(" ") == 0:
                    if len(label[i-1]) - label[i-1].count(" ") > max_space:
                        max_space = len(label[i-1]) - label[i-1].count(" ")
                    print("Test", max_space)
                    label[i] = "     " + ((max_space) * "   ") + ch
                else:
                    label[i]+=("  " + ch)
    print(label)
    for k,l in enumerate(label):
        bar_chart += l +  '\n'

    return bar_chart